@model Wollo.Web.Models.CreateUserViewModel

@{
    ViewBag.Title = @Html.DisplayNameFor(model=>model.create_user);
}
<style>
    .btn-default {
        color: #fff;
        background-color: #337ab7;
        border-color: #2e6da4;
    }

    .btn {
        display: inline-block;
        padding: 8px 18px;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
        margin-top: 13px;
    }

    button, input, select, textarea {
        font-family: inherit;
        font-size: inherit;
        line-height: inherit;
    }

    input {
        line-height: normal;
    }

    button, input, optgroup, select, textarea {
        margin: 0;
        font: inherit;
        color: inherit;
    }

    .btn:hover {
        color: #337ab7;
    }
</style>
<div id="page-wrapper">
    <div class="container-fluid">
        <!-- Page Heading -->
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">
                    <b>@Html.DisplayNameFor(model=>model.create_user)</b>
                </h1>
                <ol class="breadcrumb">
                    <li class="active">
                        <i class="fa fa-dashboard"></i> <b>@Html.DisplayNameFor(model => model.dashboard_create_user)</b>
                    </li>
                </ol>
            </div>
        </div>
        <div class="container-fluid">
            @if (TempData["Success"] != null)
            {
                <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
            }
            <div class="col-lg-12 space">

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>@Html.DisplayNameFor(m=>m.user)</h4>
                        <hr />
                        @Html.ValidationSummary(true)

                        <div class="form-group">
                            @Html.LabelFor(model => model.user_name, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.user_name, new { @class = "form-control col-md-4" })
                                @Html.ValidationMessageFor(model => model.user_name)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.first_name, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.first_name, new { @class = "form-control col-md-4" })
                                @Html.ValidationMessageFor(model => model.first_name)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.last_name, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.last_name, new { @class = "form-control col-md-4" })
                                @Html.ValidationMessageFor(model => model.last_name)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.email_address, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.email_address, new { @class = "form-control col-md-4" })
                                @Html.ValidationMessageFor(model => model.email_address)
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.country_code, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.country_code)
                                    @Html.ValidationMessageFor(model => model.country_code)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.phone_number, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.phone_number)
                                    @Html.ValidationMessageFor(model => model.phone_number)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.address, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.address)
                                    @Html.ValidationMessageFor(model => model.address)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.alternate_address, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.alternate_address)
                                    @Html.ValidationMessageFor(model => model.alternate_address)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.country_id, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.country_id)
                                    @Html.ValidationMessageFor(model => model.country_id)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.city, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.city)
                                    @Html.ValidationMessageFor(model => model.city)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.zip, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.zip)
                                    @Html.ValidationMessageFor(model => model.zip)
                                </div>
                            </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.password, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.PasswordFor(model => model.password, new { @class = "form-control col-md-4" })
                                @Html.ValidationMessageFor(model => model.password)
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.user_statusid, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.user_statusid)
                                    @Html.ValidationMessageFor(model => model.user_statusid)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.company_id, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.company_id)
                                    @Html.ValidationMessageFor(model => model.company_id)
                                </div>
                            </div>*@

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value=@Html.DisplayNameFor(model=>model.create) class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @{string back_to_users_label = @Html.DisplayNameFor(model => model.back_to_users).ToString();}
                    @Html.ActionLink(back_to_users_label, "Index")
                </div>

            </div>
        </div>

        <!-- /.container-fluid -->
    </div>
    <!-- /#page-wrapper -->
</div>
@section Scripts {
    <script src="~/js/jquery.min.js"></script>
    <script src="~/js/bootstrap.min.js"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
}
