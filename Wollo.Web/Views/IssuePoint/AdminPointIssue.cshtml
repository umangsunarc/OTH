@model Wollo.Web.Models.AdminIssuePointModel
@{
    ViewBag.Title = "Self Issue Point Request";
}
@section header{
    <link href="~/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/responsive.bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/bootstrap-datepicker.css" rel="stylesheet">

    <style>
        .options a {
            cursor: pointer;
        }

        .btn .btn-success {
            margin-left: -4px;
        }

        .btn {
            display: inline-block;
            padding: 6px 12px;
            margin-bottom: 0;
            font-size: 14px;
            font-weight: 400;
            line-height: 1.42857143;
            text-align: center;
            white-space: nowrap;
            vertical-align: middle;
            -ms-touch-action: manipulation;
            touch-action: manipulation;
            cursor: pointer;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            background-image: none;
            border: 1px solid transparent;
            border-radius: 4px;
        }
    </style>
}

<div id="page-wrapper">
    <div class="container-fluid">
        <!-- Page Heading -->
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">
                    <b>Points Request Approval</b>
                </h1>
                <ol class="breadcrumb">
                    <li class="active">
                        <i class="fa fa-dashboard"></i> <b>@Html.LabelFor(model => model.AdminIsuuePointsViewModel.dashboard_point_issue_request)</b>
                    </li>
                </ol>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-3">
                <span class="input-group-addon" style="display: block;text-align: center; padding: 5px; background: transparent; border: none;position: absolute;top: 5px;right: 30px;">
                    <span class="fa fa-calendar"></span>
                </span>
                <input id="from" name="from" type="text" class="form-control" placeholder=@Html.DisplayNameFor(model => model.AdminIsuuePointsViewModel.CommonWordsViewModel.from) />
            </div>
            <div class="col-sm-3">
                <span class="input-group-addon" style="display: block;text-align: center; padding: 5px; background: transparent; border: none;position: absolute;top: 5px;right: 30px;">
                    <span class="fa fa-calendar"></span>
                </span>
                <input id="to" name="to" type="text" class="form-control" placeholder=@Html.DisplayNameFor(model => model.AdminIsuuePointsViewModel.CommonWordsViewModel.to) />
            </div>
            <div class="col-sm-3">
                <input type="button" value=@Html.DisplayNameFor(model => model.AdminIsuuePointsViewModel.CommonWordsViewModel.filter) onclick="rangefilter()" class="btn btn-primary" id="filter" />
                <a class="btn btn-primary" href="/IssuePoint/AdminPointIssue">@Html.DisplayNameFor(model => model.AdminIsuuePointsViewModel.CommonWordsViewModel.refresh)</a>
            </div>
        </div>
        <br />
        <div class="container-fluid">
            <div class="row">
                <div id="upper-birth">
                    <div class="table-responsive">
                        <table id="tbl_adminpoint_issue_history" class="table table-bordered table-hover table-striped dt-responsive nowrap">
                            <thead>
                                @*<tr>
                                    <th class="no-b-th tex-left"><div>History</div></th>

                                    <th class="empty-th"> </th>
                                    @if (!User.IsInRole("Super Admin 1") && User.IsInRole("Super Admin 2"))
                                    {
                                        <th class="empty-th"> </th>
                                        <th class="empty-th"> </th>
                                        <th class="empty-th"> </th>
                                    }
                                    else
                                    {
                                        <th class="empty-th"> </th>
                                        <th class="empty-th"> </th>
                                        <th class="empty-th"> </th>
                                    }*@
                                @*<th class="no-b-th col-md-2">
                                        <div class="text-right">
                                            @Html.DropDownList("StatusFilter", new SelectList(Model.TopupStatusMaster, "id", "status"), "All", new { @class = "form-control" })
                                        </div>
                                    </th>*@
                                @*</tr>*@
                                <tr>
                                    <th>@Html.LabelFor(model => model.AdminIsuuePointsViewModel.IssuePointsTransferMaster.FirstOrDefault().created_date)</th>
                                    @*<th>@Html.LabelFor(model => model.admin_name)</th>*@
                                    <th>@Html.LabelFor(model => model.AdminIsuuePointsViewModel.user_name)</th>
                                    <th>@Html.LabelFor(model => model.AdminIsuuePointsViewModel.TopupStatusMaster.FirstOrDefault().status)</th>
                                    <th>@Html.LabelFor(model => model.AdminIsuuePointsViewModel.IssuePointsTransferMaster.FirstOrDefault().points_issued)</th>
                                    <th>@Html.LabelFor(model => model.AdminIsuuePointsViewModel.actions)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.AdminIsuuePointsViewModel.IssuePointsTransferMaster)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(model => item.created_date)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.AspnetUsers.username)
                                        </td>
                                        @if (item.points_issue_permission_id == 2)
                                        {
                                            <td>
                                                In Progress
                                            </td>
                                        }
                                        else if (item.points_issue_permission_id == 1)
                                        {
                                            <td>
                                                Unconfirmed
                                            </td>
                                        }
                                        else if (item.points_issue_permission_id == 3)
                                        {
                                            <td>
                                                Cancelled
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                Approved
                                            </td>
                                        }
                                        <td>
                                            @Html.DisplayFor(model => item.points_issued)
                                        </td>
                                        <td>
                                            @if (item.AspnetUsers.IsAdmin == true && (item.points_issue_permission_id != 4 && item.points_issue_permission_id != 3))
                                            {
                                                <a href="javascript:void(0)" data-id="@item.id" data-status="@item.points_issue_permission_id" data-stockid="@item.stockCodeId" class="statusChange">@Html.LabelFor(model => model.AdminIsuuePointsViewModel.change_status)</a>
                                            }
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>


                        <!-- Button trigger modal -->
                    </div>
                </div>
            </div>
            <!-- /.container-fluid -->
        </div>
    </div>
    <!-- /#page-wrapper -->
    <!-- Modal -->
    <div class="modal fade" id="Status" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">@Html.LabelFor(x => x.AdminIsuuePointsViewModel.change_status)</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="dropdown col-sm-6">
                            @Html.Hidden("IssuePointTransferMasterId")
                            @Html.Hidden("StockId")
                            @Html.DropDownList("Statusdd", new SelectList(Model.AdminIsuuePointsViewModel.IssueWithdrawelPermissionMaster, "id", "permission"), "All", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">@Html.LabelFor(model => model.AdminIsuuePointsViewModel.cancel)</button>
                    <button type="button" class="btn btn-primary" id="change-status">@Html.LabelFor(model => model.AdminIsuuePointsViewModel.confirm)</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /#wrapper -->
@section scripts{
    <script src="~/js/jquery.js"></script>
    @*<script src="~/Scripts/bootstrap.js"></script>*@
    <script src="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
    <script src="~/js/jquery.dataTables.min.js"></script>
    <script src="~/js/dataTables.bootstrap.min.js"></script>
    <script src="~/js/dataTables.responsive.min.js"></script>
    <script src="~/js/responsive.bootstrap.min.js"></script>
    <script src="~/js/bootstrap-datepicker.js"></script>
    <script>

        //$('#myGroup ul li a').click(function () {
        //    $('#myGroup ul li ul.collapse ').removeClass('in');
        //    $('#myGroup ul li').removeClass('active');
        //});

        //$("#tbl_adminpoint_issue_history").DataTable({
        //    "order": [[0, "desc"]]
        //});
        var english = {
            "sLengthMenu": "Show _MENU_ entries",
            "sZeroRecords": "No data available in table",
            "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
            "sInfoEmpty": "Showing 0 to 0 of 0 entries",
            "sInfoFiltered": "(filtered from _MAX_ total entries)"
        };
        var chinese = {
            "sProcessing": "处理中...",
            "sLengthMenu": "显示 _MENU_ 项结果",
            "sZeroRecords": "没有匹配结果",
            "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
            "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
            "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
            "sInfoPostFix": "",
            "sSearch": "搜索:",
            "sUrl": "",
            "sEmptyTable": "表中数据为空",
            "sLoadingRecords": "载入中...",
            "sInfoThousands": ",",
            "oPaginate": {
                "sFirst": "首页",
                "sPrevious": "上页",
                "sNext": "下页",
                "sLast": "末页"
            },
            "oAria": {
                "sSortAscending": ": 以升序排列此列",
                "sSortDescending": ": 以降序排列此列"
            }
        }
        $(document).ready(function () {
            var currentLang = english;
            if ('@Session["Language"]' != null || '@Session["Language"]' != "") {
                if ('@Session["Language"]' == "chinese") {
                    currentLang = chinese;
                }
            }
            $('#myGroup ul li a').click(function () {
                $('#myGroup ul li ul.collapse ').removeClass('in');
                $('#myGroup ul li').removeClass('active');
            });

            $('#tbl_adminpoint_issue_history').dataTable({
                columnDefs: [
                   { type: 'date-euro', targets: 0 }
                ],
                order: [[0, "desc"]],
                "oLanguage": currentLang
            });

            if ('@TempData["StartDate"]' != '' && '@TempData["EndDate"]' != '') {
                var startDate = ('@TempData["StartDate"]').split("/");
                var endDate = ('@TempData["EndDate"]').split("/");
                var startYear = startDate[2].split(" ");
                var endYear = endDate[2].split(" ");
                var start = new Date(startYear[0], parseInt(startDate[1]) - 1, startDate[0]);
                var end = new Date(endYear[0], parseInt(endDate[1]) - 1, endDate[0])
                $('#from').datepicker({ format: 'dd/mm/yyyy' }); // format to show
                $('#to').datepicker({ format: 'dd/mm/yyyy' });
                $('#from').datepicker('setDate', start);
                $('#to').datepicker('setDate', end);
            }
        });

        //*********************** Plugin to sort date of format DD/MM/YYYY hh:mm:ss**************************//
        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "date-euro-pre": function (a) {
                var x;

                if ($.trim(a) !== '') {
                    var frDatea = $.trim(a).split(' ');
                    var frTimea = (undefined != frDatea[1]) ? frDatea[1].split(':') : [00, 00, 00];
                    var frDatea2 = frDatea[0].split('/');
                    x = (frDatea2[2] + frDatea2[1] + frDatea2[0] + frTimea[0] + frTimea[1] + frTimea[2]) * 1;
                }
                else {
                    x = Infinity;
                }

                return x;
            },

            "date-euro-asc": function (a, b) {
                return a - b;
            },

            "date-euro-desc": function (a, b) {
                return b - a;
            }
        });
        //*********************** Plugin to sort date of format DD/MM/YYYY hh:mm:ss**************************//

        var FromEndDate = new Date();
        var ToEndDate = new Date();
        ToEndDate.setDate(ToEndDate.getDate() + 365);
        $('#to')
            .datepicker({
                format: 'dd/mm/yyyy',
                weekStart: 1,
                //startDate: startDate,
                endDate: ToEndDate,
                startView: 'decade',
                autoclose: true,
                todayHighlight: true
            })
            .on('changeDate', function (selected) {
                FromEndDate = new Date(selected.date.valueOf());
                FromEndDate.setDate(FromEndDate.getDate(new Date(selected.date.valueOf())));
                $('#from').datepicker('setEndDate', FromEndDate);
            });
        $('#from').datepicker({
            format: 'dd/mm/yyyy',
            weekStart: 1,
            //startDate: '01/01/2012',
            endDate: FromEndDate,
            startView: 'decade',
            autoclose: true,
            todayHighlight: true
        })
        .on('changeDate', function (selected) {
            startDate = new Date(selected.date.valueOf());
            startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
            $('#to').datepicker('setStartDate', startDate);
        });

        $('.datepicker').datepicker({
            startView: 'decade',
            autoclose: true,
            todayHighlight: true
        });

        //for filtering according to date range
        function rangefilter() {
            if ($('#from').val() == "" && $('#to').val() == "") {
                alert('@Html.DisplayNameFor(model => model.PleaseSelectTheDateRange)');
            }
            else if ($('#from').val() == "") {
                alert('Please select start date.');
            }
            else if ($('#to').val() == "") {
                alert('@Html.DisplayNameFor(model => model.PleaseSelectEndDate)');
            }
            else {
                var startDate = $('#from').val();
                var endDate = $('#to').val();
                var updatedStartDate = startDate.split("/");
                updatedStartDate = updatedStartDate[1] + "/" + updatedStartDate[0] + "/" + updatedStartDate[2];
                var updatedEndDate = endDate.split("/");
                updatedEndDate = updatedEndDate[1] + "/" + updatedEndDate[0] + "/" + updatedEndDate[2];
                window.location.href = "@Url.Action("RangeFilter5", "IssuePoint")" + "?start_date=" + updatedStartDate + "&end_date=" + updatedEndDate //+ "&end_date=" + $("#to").val();//
            }
        }

        $("#nav-cash").addClass("active");
        $("#Open-Topup-Modal").click(function () {
            $("#PaymentMethod").val("");
            $("#Amount").val("");
            $("#myModalLabel").html("Add Topup");
            $("#Mode").val("Add");
            $("#myModal").modal("show");
        });

        $("#Amount").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        $("#Add-Topup").click(function () {
            if ($("#PaymentMethod").val().length > 0 && $("#Amount").val().length > 0) {
                if ($("#Amount").val() < 10) {
                    alert("Please enter minimum $10 amount."); 
                }
                else {
                    if ($("#Mode").val() == "Add") {
                        $.ajax({
                            url: "@Url.Action("AddTopup","Cash")" + "?PaymentMethod=" + $("#PaymentMethod").val() + "&Amount=" + $("#Amount").val(),
                            method: 'POST',
                            success: function (result) {
                                if (result == 1) {
                                    alert('@Html.DisplayNameFor(model => model.TopupAddedSuccessfully)');
                                    location.reload();
                                }
                                else {
                                    alert('@Html.DisplayNameFor(model => model.SomethingWentWrong)');
                                }
                            },
                            error: function (e) {
                                alert('@Html.DisplayNameFor(model => model.SomethingWentWrong)');
                            }
                        });
                    }
                    else {
                        $.ajax({
                            url: "@Url.Action("EditTopup","Cash")",
                            data: "{ 'payment_method': '" + $("#PaymentMethod").val() + "', 'amount': '" + $("#Amount").val() + "', 'id': '" + $("#TopupId").val() + "' }",
                            contentType: 'application/json',
                            method: 'POST',
                            success: function (result) {
                                if (result == 1) {
                                    alert("Topup updated successfully.");
                                    location.reload();
                                }
                                else {
                                    alert('@Html.DisplayNameFor(model => model.SomethingWentWrong)');
                                }
                            },
                            error: function (e) {
                                alert('@Html.DisplayNameFor(model => model.SomethingWentWrong)');
                            }
                        });
                    }
                }
            }
            else {
                alert('@Html.DisplayNameFor(model => model.MakeSureYouHaveSelectedPaymentMethodAndProvidedAmount)');
            }
        });

        $(".edit").click(function () {
            $("#PaymentMethod").val($(this).attr("data-payment-method"));
            $("#Amount").val($(this).attr("data-amount"));
            $("#myModalLabel").html("Modify Topup");
            $("#Mode").val("Edit");
            $("#TopupId").val($(this).attr("data-id"));
            $("#myModal").modal("show");
        });

        //$(".statusChange").click(function () {
        //    $("#IssuePointTransferMasterId").val($(this).attr("data-id"));
        //    $("#StockId").val($(this).attr("data-stockid"))
        //    $("#Statusdd").val($(this).attr("data-status"));
        //    $("#Status").modal("show");
        //});
        $("#tbl_adminpoint_issue_history tbody").on('click', '.statusChange', function () {
            $("#IssuePointTransferMasterId").val($(this).attr("data-id"));
            $("#StockId").val($(this).attr("data-stockid"))
            $("#Statusdd").val($(this).attr("data-status"));
            $("#Status").modal("show");
        });

        $(".cancel").click(function () {
            $.ajax({
                url: "@Url.Action("CancelTopup", "Cash")" + "?id=" + $(this).attr("data-id"),
                method: 'POST',
                success: function (result) {
                    if (result == 1) {
                        alert("Topup cancelled successfully.");
                        location.reload();
                    }
                    else if (result == 2) {
                        alert("Topup cannot be cancelled.");
                    }
                    else if (result == 3) {
                        alert("User not authorized.");
                    }
                    else {
                        alert('@Html.DisplayNameFor(model => model.SomethingWentWrong)');
                    }
                },
                error: function (e) {
                    alert('@Html.DisplayNameFor(model => model.SomethingWentWrong)');
                }
            });
        });

        $("#change-status").click(function () {
            $("#change-status").prop("disabled", true);
            $.ajax({
                url: "@Url.Action("ChangeSelfIssuePointStatus", "IssuePoint")" + "?id=" + $("#IssuePointTransferMasterId").val() + "&statusId=" + $("#Statusdd").val() + "&stockId=" + $("#StockId").val(),
                method: 'POST',
                success: function (result) {
                    if (result == 1) {
                        alert('@Html.DisplayNameFor(model => model.StatusUpdatedSuccessfully)'); 
                        location.reload();
                    }
                    else if (result == 2) {
                        $("#change-status").prop("disabled", false);
                        alert('@Html.DisplayNameFor(model => model.YouDoNotHaveSufficientStockAmountToPerformThisAction)'); 
                    }
                    else {
                        $("#change-status").prop("disabled", false);
                        alert('@Html.DisplayNameFor(model => model.SomethingWentWrong)');
                    }
                },
                error: function (e) {
                    $("#change-status").prop("disabled", true);
                    alert('@Html.DisplayNameFor(model => model.SomethingWentWrong)');
                }
            });
        });
    </script>
}
