@model Wollo.Entities.ViewModels.IssuePointDetails
@{
    Layout = null;
}
<link href="~/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/css/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="~/css/bootstrap-datepicker.css" rel="stylesheet">
<div class="">
    @if (!User.IsInRole("Super Admin 1") && !User.IsInRole("Super Admin 2"))
    {
        <div class="panel panel-default">
            <div class="panel-body">
                <strong>@Html.DisplayNameFor(model => model.current_issued_points):</strong>  @Model.TotalPoints<br /><br />
                <strong>@Html.DisplayNameFor(model => model.cancelled_issued_points):</strong>  @Model.CancelledPoints<br /><br />
                <strong>@Html.DisplayNameFor(model => model.issued_point_balance):</strong>  @Model.RemainingPoints<br /><br />
            </div>
        </div>
    }
</div>

@if (User.IsInRole("Super Admin 1") || User.IsInRole("Super Admin 2"))
{
    <div class="row">
        <div class="col-lg-12">
            <div class="" style="right:5px;">
                <button type="button" class="btn btn-primary" id="add">@Html.LabelFor(model => model.issue_reward_points)<i class="fa fa-plus-square" aria-hidden="true"></i></button>
            </div>
        </div>
    </div><br />
}
@if (User.IsInRole("Super Admin 1") || User.IsInRole("Super Admin 2"))
{
    <div class="row">
        <div class="col-sm-3">
            <span class="input-group-addon" style="display: block;text-align: center; padding: 5px; background: transparent; border: none;position: absolute;top: 5px;right: 30px;">
                <span class="fa fa-calendar"></span>
            </span>
            <input id="from" name="from" type="text" class="form-control" placeholder=@Html.DisplayNameFor(model=>model.CommonWordsViewModel.from) />
        </div>
        <div class="col-sm-3">
            <span class="input-group-addon" style="display: block;text-align: center; padding: 5px; background: transparent; border: none;position: absolute;top: 5px;right: 30px;">
                <span class="fa fa-calendar"></span>
            </span>
            <input id="to" name="to" type="text" class="form-control" placeholder=@Html.DisplayNameFor(model=>model.CommonWordsViewModel.to) />
        </div>
        <div class="col-sm-3">
            <input type="button" value=@Html.DisplayNameFor(model=>model.CommonWordsViewModel.filter) onclick="rangefilter()" class="btn btn-primary" id="filter" />
            <a class="btn btn-primary" href="/IssuePoint">@Html.DisplayNameFor(model=>model.CommonWordsViewModel.refresh)</a>
        </div>
    </div>
    <br />
}
else
{
    <div class="row">
        <div class="col-sm-3">
            <span class="input-group-addon" style="display: block;text-align: center; padding: 5px; background: transparent; border: none;position: absolute;top: 5px;right: 30px;">
                <span class="fa fa-calendar"></span>
            </span>
            <input id="from" name="from" type="text" class="form-control" placeholder=@Html.DisplayNameFor(model=>model.CommonWordsViewModel.to) />
        </div>
        <div class="col-sm-3">
            <span class="input-group-addon" style="display: block;text-align: center; padding: 5px; background: transparent; border: none;position: absolute;top: 5px;right: 30px;">
                <span class="fa fa-calendar"></span>
            </span>
            <input id="to" name="to" type="text" class="form-control" placeholder=@Html.DisplayNameFor(model=>model.CommonWordsViewModel.to) />
        </div>
        <div class="col-sm-3">
            <input type="button" value=@Html.DisplayNameFor(model=>model.CommonWordsViewModel.filter) onclick="rangefilterUser()" class="btn btn-primary" id="filter" />
            <a class="btn btn-primary" href="/IssuePoint">@Html.DisplayNameFor(model => model.CommonWordsViewModel.refresh)</a>
        </div>
    </div>
    <br />
}
<br/>
<div class="row">
    <div class="col-lg-12">
        <div id="upper-birth">
            <div class="table-responsive">
                <table id="tbl_issuepoint_history" class="table table-bordered table-hover table-striped dt-responsive nowrap">
                    <thead>

                        <tr>
                            <th>@Html.LabelFor(model => model.stock)</th>
                            <th>@Html.LabelFor(model => model.IssuePointTransferMaster.FirstOrDefault().created_date)</th>
                            <th>
                                @if (User.IsInRole("Super Admin 1") || User.IsInRole("Super Admin 2"))
                                {

                                    @Html.LabelFor(model => model.user_name)
                                }
                                else
                                {

                                    @Html.LabelFor(model => model.description)
                                }
                            </th>
                            <th>@Html.LabelFor(model=>model.status)</th>
                            <th>
                                @if (User.IsInRole("Super Admin 1") || User.IsInRole("Super Admin 2"))
                                {
                                    @Html.DisplayNameFor(model=> model.transfer_points)
                                }
                                else
                                {
                                    @Html.LabelFor(model=>model.issued_points_value)
                                }
                            </th>
                            <th>
                                @if (User.IsInRole("Super Admin 1") || User.IsInRole("Super Admin 2"))
                                {

                                    @Html.LabelFor(model => model.actions)
                                }
                                else
                                {

                                    @Html.LabelFor(model => model.details)
                                }
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.IssuePointsMaster)
                        {
                            <tr>
                                <td>@(item.StockCode.stock_name)</td>
                                <td>
                                    @Html.DisplayFor(x => item.created_date)
                                </td>
                                <td>
                                    @if (User.IsInRole("Super Admin 1") || User.IsInRole("Super Admin 2"))
                                    {
                                        @Html.DisplayFor(x => item.AspnetUsers.username)
                                    }
                                </td>
                                <td>@Html.DisplayFor(x => item.status)</td>
                                <td>@Html.DisplayFor(x => item.IssuePointsTransferMaster.points_issued)</td>
                                <td>
                                    @if (User.IsInRole("Super Admin 1") || User.IsInRole("Super Admin 2"))
                                    {
                                        if (item.status != "Cancelled" && item.AspnetUsers.IsAdmin==false)
                                        {
                                            <a href="javascript:void(0)" data-id="@item.transfer_id" data-stock="@item.stock_code_id" data-username="@item.AspnetUsers.username" data-userid="@item.user_id" data-amount="@item.IssuePointsTransferMaster.points_issued" class="edit">@Html.LabelFor(model => model.modify)</a>
                                            <span> | </span><a href="javascript:void(0)" data-id="@item.id" class="cancel">@Html.LabelFor(model => model.cancel)</a>
                                        }
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<script src="~/js/bootstrap-datepicker.js"></script>
<script>
    //$('#myGroup ul li a').click(function () {
    //    $('#myGroup ul li ul.collapse ').removeClass('in');
    //    $('#myGroup ul li').removeClass('active');
    //});
    //$("#tbl_issuepoint_history").DataTable({
    //    "order": [[1, "desc"]]
    //});
    var english = {
        "sLengthMenu": "Show _MENU_ entries",
        "sZeroRecords": "No data available in table",
        "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
        "sInfoEmpty": "Showing 0 to 0 of 0 entries",
        "sInfoFiltered": "(filtered from _MAX_ total entries)"
    };
    var chinese = {
        "sProcessing": "处理中...",
        "sLengthMenu": "显示 _MENU_ 项结果",
        "sZeroRecords": "没有匹配结果",
        "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
        "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
        "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
        "sInfoPostFix": "",
        "sSearch": "搜索:",
        "sUrl": "",
        "sEmptyTable": "表中数据为空",
        "sLoadingRecords": "载入中...",
        "sInfoThousands": ",",
        "oPaginate": {
            "sFirst": "首页",
            "sPrevious": "上页",
            "sNext": "下页",
            "sLast": "末页"
        },
        "oAria": {
            "sSortAscending": ": 以升序排列此列",
            "sSortDescending": ": 以降序排列此列"
        }
    }
    $(document).ready(function () {
        var currentLang = english;
        if ('@Session["Language"]' != null || '@Session["Language"]' != "") {
            if ('@Session["Language"]' == "chinese") {
                currentLang = chinese;
            }
        }
        $('#myGroup ul li a').click(function () {
            $('#myGroup ul li ul.collapse ').removeClass('in');
            $('#myGroup ul li').removeClass('active');
        });

        $('#tbl_issuepoint_history').dataTable({
            columnDefs: [
               { type: 'date-euro', targets: 1 }
            ],
            order: [[1, "desc"]],
            "oLanguage": currentLang
        });

        if ('@TempData["StartDate"]' != '' && '@TempData["EndDate"]' != '') {
            var startDate = ('@TempData["StartDate"]').split("/");
            var endDate = ('@TempData["EndDate"]').split("/");
            var startYear = startDate[2].split(" ");
            var endYear = endDate[2].split(" ");
            var start = new Date(startYear[0], parseInt(startDate[1])-1, startDate[0]);
            var end = new Date(endYear[0], parseInt(endDate[1]) - 1, endDate[0])
            $('#from').datepicker({ format: 'dd/mm/yyyy' }); // format to show
            $('#to').datepicker({ format: 'dd/mm/yyyy' });
            $('#from').datepicker('setDate', start);
            $('#to').datepicker('setDate', end);
        }
    });

    //*********************** Plugin to sort date of format DD/MM/YYYY hh:mm:ss**************************//
    jQuery.extend(jQuery.fn.dataTableExt.oSort, {
        "date-euro-pre": function (a) {
            var x;

            if ($.trim(a) !== '') {
                var frDatea = $.trim(a).split(' ');
                var frTimea = (undefined != frDatea[1]) ? frDatea[1].split(':') : [00, 00, 00];
                var frDatea2 = frDatea[0].split('/');
                x = (frDatea2[2] + frDatea2[1] + frDatea2[0] + frTimea[0] + frTimea[1] + frTimea[2]) * 1;
            }
            else {
                x = Infinity;
            }

            return x;
        },

        "date-euro-asc": function (a, b) {
            return a - b;
        },

        "date-euro-desc": function (a, b) {
            return b - a;
        }
    });
    //*********************** Plugin to sort date of format DD/MM/YYYY hh:mm:ss**************************//

    var FromEndDate = new Date();
    var ToEndDate = new Date();
    ToEndDate.setDate(ToEndDate.getDate() + 365);
    $('#to')
        .datepicker({
            format: 'dd/mm/yyyy',
            weekStart: 1,
            //startDate: startDate,
            endDate: ToEndDate,
            startView: 'decade',
            autoclose: true,
            todayHighlight: true
        })
        .on('changeDate', function (selected) {
            FromEndDate = new Date(selected.date.valueOf());
            FromEndDate.setDate(FromEndDate.getDate(new Date(selected.date.valueOf())));
            $('#from').datepicker('setEndDate', FromEndDate);
        });
    $('#from').datepicker({
        format: 'dd/mm/yyyy',
        weekStart: 1,
        //startDate: '01/01/2012',
        endDate: FromEndDate,
        startView: 'decade',
        autoclose: true,
        todayHighlight: true
    })
    .on('changeDate', function (selected) {
        startDate = new Date(selected.date.valueOf());
        startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
        $('#to').datepicker('setStartDate', startDate);
    });

    $('.datepicker').datepicker({
        startView: 'decade',
        autoclose: true,
        todayHighlight: true
    });

    $("#add").click(function () {
        //$("#NewStockCode").val("").removeAttr("disabled");
        var selectedStock = $("#StockCode").val();
        $("#NewStockCode").val(selectedStock)
        $("#UserDropdown").removeProp("disabled");
        //$("#UserDropdown option:selected").text("Select User");
        $('#UserDropdown option:first').prop('selected', true);
        $("#Amount").val("");
        //$("#myModalLabel").html("Issue New Reward Points");
        $("#myModalLabel").html('@Html.DisplayNameFor(model=> model.transfer_points)');
        $("#myModal").modal("show");
    });

    $(".edit").click(function () {

        $("#NewStockCode").val($(this).attr("data-stock")).prop("disabled", true);
        $("#UserDropdown option:selected").text($(this).attr("data-username"));
        $("#UserDropdown").prop("disabled", true);
        $("#UserId").val($(this).attr("data-userid"));
        $("#Amount").val($(this).attr("data-amount"));
        $("#myModalLabel").html("Update Issue Points");
        $("#issuePointId").val($(this).attr("data-id"));
        $("#Mode").val("Edit");
        $("#myModal").modal("show");

    });

    $(".cancel").click(function () {
        $.ajax({
            url: "@Url.Action("CancelIssuePoint", "IssuePoint")" + "?id=" + $(this).attr("data-id"),
            method: 'POST',
            success: function (result) {
                if (result == 1) {
                    alert("Issued points cancelled successfully.");
                    $("#history-container").load("@Url.Action("GetIssuePointsHistory","IssuePoint")" + "?stockCodeId=" + $("#StockCode").val());
                }
                else if (result == 2) {
                    alert('@Html.DisplayNameFor(model => model.IssuePointTransferMaster.FirstOrDefault().IssuedPointsCannotBeCancelled)');
                }
                else if (result == 3) {
                    alert("User not authorized.");
                }
                else {
                    alert('@Html.DisplayNameFor(model => model.IssuePointTransferMaster.FirstOrDefault().SomethingWentWrong)');
                }
                $("#myModal").modal("hide");
            },
            error: function (e) {
                alert('@Html.DisplayNameFor(model => model.IssuePointTransferMaster.FirstOrDefault().SomethingWentWrong)');
                $("#myModal").modal("hide");
            }
        });
    });
</script>
