@model Wollo.Web.Models.HolidayDataModel
@{
    ViewBag.Title = "Holiday/Notification Date";
}
@section header{
    <link href="~/css/bootstrap-datepicker.css" rel="stylesheet">
    <link href="~/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/responsive.bootstrap.min.css" rel="stylesheet" />
}
<style>
    .btn .btn-success {
        margin-left: -4px;
    }

    .btn {
        display: inline-block;
        padding: 6px 12px;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
    }
</style>
<div id="page-wrapper">
    <div class="container-fluid">
        <!-- Page Heading -->
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">
                    <b>@Html.LabelFor(x => x.HolidayData.notifications)</b>
                    @*@Html.LabelFor(x=>x.notification)*@
                </h1>
                <ol class="breadcrumb">
                    <li class="active">
                        <i class="fa fa-dashboard"></i> @Html.LabelFor(x => x.HolidayData.dashboard_notification)
                    </li>
                </ol>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <button type="button" class="btn btn-primary" id="add">@Html.LabelFor(x => x.HolidayData.add_new_notification)<i class="fa fa-plus-square" aria-hidden="true"></i></button>
            </div>
        </div><br />
        <div class="row">
            <div class="col-sm-3">
                <span class="input-group-addon" style="display: block;text-align: center; padding: 5px; background: transparent; border: none;position: absolute;top: 5px;right: 30px;">
                    <span class="fa fa-calendar"></span>
                </span>
                <input id="from" name="from" type="text" class="form-control" placeholder=@Html.DisplayNameFor(model => model.HolidayData.CommonWordsViewModel.from) />
            </div>
            <div class="col-sm-3">
                <span class="input-group-addon" style="display: block;text-align: center; padding: 5px; background: transparent; border: none;position: absolute;top: 5px;right: 30px;">
                    <span class="fa fa-calendar"></span>
                </span>
                <input id="to" name="to" type="text" class="form-control" placeholder=@Html.DisplayNameFor(model => model.HolidayData.CommonWordsViewModel.to) />
            </div>
            <div class="col-sm-3">
                <input type="button" value=@Html.DisplayNameFor(model => model.HolidayData.CommonWordsViewModel.filter) onclick="rangefilter()" class="btn btn-primary" id="filter" />
                <a class="btn btn-primary" href="/Holiday">@Html.DisplayNameFor(model => model.HolidayData.CommonWordsViewModel.refresh)</a>
            </div>
        </div>
        <br />
        <div class="container-fluid">
            <div class="row">
                <div id="upper-birth">
                    <div class="table-responsive">
                        <table id="tbl_notification" class="table table-bordered table-hover table-striped">
                            <thead>
                                @*<tr>
                                        <th class="no-b-th">
                                            <button type="button" class="btn btn-primary" id="add">Add New Notification <i class="fa fa-plus-square" aria-hidden="true"></i></button>
                                        </th>
                                        <th class="empty-th"> </th>
                                        <th class="empty-th"> </th>
                                        <th class="empty-th"> </th>
                                        <th class="empty-th"> </th>
                                    </tr>*@
                                <tr>
                                    <th>@Html.LabelFor(x => x.HolidayData.date)</th>
                                    <th>@Html.LabelFor(x => x.HolidayData.description)</th>
                                    <th>@Html.LabelFor(x => x.HolidayData.status)</th>
                                    <th>@Html.LabelFor(x => x.HolidayData.notify_before)</th>
                                    <th>@Html.LabelFor(x => x.HolidayData.action)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.HolidayData.lstHolidayMaster)
                                {
                                    <tr>
                                        <td>

                                            @{
                                    string date = item.holiday_date.ToString("dd'/'MM'/'yyyy");
                                            }
                                            @Html.DisplayFor(x => date)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(x => item.description)
                                        </td>
                                        <td>
                                            @if (item.holiday_statusid == 3)
                                            {
                                                @Html.DisplayName("Expire")
                                            }
                                            else if (item.holiday_statusid == 2)
                                            {
                                                @Html.DisplayName("Upcoming")
                                            }
                                            else
                                            {
                                                @Html.DisplayName("Active")
                                            }
                                            @* @Html.DisplayFor(x => item.HolidayStatusMaster.status)*@
                                        </td>
                                        <td>@Html.DisplayFor(x => item.notify_before)</td>
                                        <td>
                                            @if (item.holiday_statusid != 3)
                                            {
                                                <a href="javascript:void(0)" data-id="@item.id" data-description="@item.description" data-date="@item.holiday_date" data-notify="@item.notify_before" class="edit">@Html.LabelFor(x => x.HolidayData.modify)</a>
                                                <span> | </span><a href="javascript:void(0)" data-id="@item.id" data-status="@item.holiday_statusid" class="change-status">@Html.LabelFor(x => x.HolidayData.change_status)</a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <!-- /.container-fluid -->
        </div>
        <!-- /#page-wrapper -->
        <!-- Modal -->
        <div class="modal fade" id="myModal" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="myModalLabel">@Html.LabelFor(x => x.HolidayData.new_holiday_closing_date)</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            @Html.Hidden("Mode", "Add")
                            @Html.Hidden("HolidayId")
                            <div class="dropdown col-sm-3">
                                <p class="text-left"> @Html.LabelFor(x => x.HolidayData.date) </p>
                            </div>
                            <div class="dropdown col-sm-6">
                                @Html.TextBox("Date", null, new { @class = "form-control datepicker", @placeholder = @Html.DisplayNameFor(m=>m.date) })
                                <span class="input-group-addon" style="display: block;text-align: center; padding: 5px; background: transparent; border: none;position: absolute;top: 5px;right: 30px;">
                                    <span class="fa fa-calendar"></span>
                                </span>
                            </div>
                            <div class="clearfix"></div>
                            <br />
                            <div class="clearfix"></div>
                            <div class="dropdown col-sm-3">
                                <p class="text-left"> @Html.LabelFor(x => x.HolidayData.notify_before) </p>
                            </div>
                            <div class="dropdown col-sm-6">
                                @Html.TextBox("Notify", null, new { @class = "form-control", @placeholder = @Html.DisplayNameFor(m=>m.NotifyBefore) })
                            </div>
                            <div class="clearfix"></div>
                            <br />
                            <div class="clearfix"></div>
                            <div class="dropdown col-sm-3">
                                <p class="text-left"> @Html.LabelFor(x => x.HolidayData.description): </p>
                            </div>
                            <div class="dropdown col-sm-6">
                                @Html.TextArea("Description", null, new { @class = "form-control", @placeholder =@Html.DisplayNameFor(m=>m.Description) }) <br />@*<strong>@Html.LabelFor(x => x.words_limit) :</strong> <strong> <span id="numlimit"></span></strong>*@
                            </div>
                            <div class="clearfix"></div>
                            <br />
                            <div class="clearfix"></div>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">@Html.LabelFor(x => x.HolidayData.cancel)</button>
                        <button type="button" class="btn btn-primary" id="holiday">@Html.LabelFor(x => x.HolidayData.confirm)</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="StatusModal" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">@Html.LabelFor(x => x.HolidayData.change_status)</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="dropdown col-sm-6">
                            @Html.Hidden("StatusHolidayId")
                            @Html.DropDownList("Statusdd", new SelectList(Model.HolidayData.lstHolidayStatusMaster, "id", "status"), "All", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">@Html.LabelFor(x => x.HolidayData.cancel)</button>
                    <button type="button" class="btn btn-primary" id="change-status">@Html.LabelFor(x => x.HolidayData.confirm)</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script src="~/js/jquery.js"></script>
    @*<script src="~/Scripts/bootstrap.js"></script>*@
    <script src="http://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
    <script src="~/js/bootstrap-datepicker.js"></script>
    <script src="~/js/jquery.dataTables.min.js"></script>
    <script src="~/js/dataTables.bootstrap.min.js"></script>
    <script src="~/js/dataTables.responsive.min.js"></script>
    <script src="~/js/responsive.bootstrap.min.js"></script>
    <script>
        var english = {
            "sLengthMenu": "Show _MENU_ entries",
            "sZeroRecords": "No data available in table",
            "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
            "sInfoEmpty": "Showing 0 to 0 of 0 entries",
            "sInfoFiltered": "(filtered from _MAX_ total entries)"
        };
        var chinese = {
            "sProcessing": "处理中...",
            "sLengthMenu": "显示 _MENU_ 项结果",
            "sZeroRecords": "没有匹配结果",
            "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
            "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
            "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
            "sInfoPostFix": "",
            "sSearch": "搜索:",
            "sUrl": "",
            "sEmptyTable": "表中数据为空",
            "sLoadingRecords": "载入中...",
            "sInfoThousands": ",",
            "oPaginate": {
                "sFirst": "首页",
                "sPrevious": "上页",
                "sNext": "下页",
                "sLast": "末页"
            },
            "oAria": {
                "sSortAscending": ": 以升序排列此列",
                "sSortDescending": ": 以降序排列此列"
            }
        }
        $(document).ready(function () {
            debugger;
            var currentLang = english;
            if ('@Session["Language"]' != null || '@Session["Language"]' != "") {
                if ('@Session["Language"]' == "chinese") {
                    currentLang = chinese;
                }
            }
            $('#myGroup ul li a').click(function () {
                $('#myGroup ul li ul.collapse ').removeClass('in');
                $('#myGroup ul li').removeClass('active');
            });
            //$("#tbl_notification").DataTable();
            $('#tbl_notification').dataTable({
                "aoColumns": [
                    { "sType": "date-uk" },
                    null,
                    null,
                    null,
                    null
                ],
                order: [[0, "desc"]],
                "oLanguage": currentLang
            });

            //$('#btn').click(function () {
            //    dtable.fnDestroy();
            //    dtable = null;
            //    currentLang = (currentLang == english) ? espanol : english;
            //    dtable = $('#table_id').dataTable({ "oLanguage": currentLang });
            //});

            if ('@TempData["StartDate"]' != '' && '@TempData["EndDate"]' != '') {
                var startDate = ('@TempData["StartDate"]').split("/");
                var endDate = ('@TempData["EndDate"]').split("/");
                var startYear = startDate[2].split(" ");
                var endYear = endDate[2].split(" ");
                var start = new Date(startYear[0], parseInt(startDate[1]) - 1, startDate[0]);
                var end = new Date(endYear[0], parseInt(endDate[1]) - 1, endDate[0])
                $('#from').datepicker({ format: 'dd/mm/yyyy' }); // format to show
                $('#to').datepicker({ format: 'dd/mm/yyyy' });
                $('#from').datepicker('setDate', start);
                $('#to').datepicker('setDate', end);
            }

        })

        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "date-uk-pre": function (a) {
                var ukDatea = a.split('/');
                return (ukDatea[2] + ukDatea[1] + ukDatea[0]) * 1;
            },

            "date-uk-asc": function (a, b) {
                return ((a < b) ? -1 : ((a > b) ? 1 : 0));
            },

            "date-uk-desc": function (a, b) {
                return ((a < b) ? 1 : ((a > b) ? -1 : 0));
            }
        });

        $("#nav-holiday").addClass("active");
        $('.datepicker').datepicker({
            startView: 'decade',
            format: 'dd-mm-yyyy',
            startDate: '+0d',
            autoclose: true,
            todayHighlight: true
        });
        //$('#datepicker').datepicker({
        //    format: 'mm-dd-yyyy',
        //    endDate: '+1y',
        //    autoclose: true,
        //    todayHighlight: true
        //});

        var FromEndDate = new Date();
        var ToEndDate = new Date();
        ToEndDate.setDate(ToEndDate.getDate() + 365);
        $('#to')
            .datepicker({
                format: 'dd/mm/yyyy',
                weekStart: 1,
                //startDate: startDate,
                endDate: ToEndDate,
                startView: 'decade',
                autoclose: true,
                todayHighlight: true
            })
            .on('changeDate', function (selected) {
                FromEndDate = new Date(selected.date.valueOf());
                FromEndDate.setDate(FromEndDate.getDate(new Date(selected.date.valueOf())));
                $('#from').datepicker('setEndDate', FromEndDate);
            });
        $('#from').datepicker({
            format: 'dd/mm/yyyy',
            weekStart: 1,
            //startDate: '01/01/2012',
            endDate: FromEndDate,
            startView: 'decade',
            autoclose: true,
            todayHighlight: true
        })
        .on('changeDate', function (selected) {
            startDate = new Date(selected.date.valueOf());
            startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
            $('#to').datepicker('setStartDate', startDate);
        });

        $('.datepicker').datepicker({
            startView: 'decade',
            autoclose: true,
            todayHighlight: true,
            format: 'dd-mm-yyyy'
        });


        //for filtering according to date range
        function rangefilter() {
            if ($('#from').val() == "" && $('#to').val() == "") {
                alert('@Html.DisplayNameFor(model=>model.PleaseSelectTheDateRange)');
            }
            else if ($('#from').val() == "") {
                alert('Please select start date.');
            }
            else if ($('#to').val() == "") {
                alert('@Html.DisplayNameFor(model=>model.PleaseSelectEndDate)');
            }
            else {
                var startDate = $('#from').val();
                var endDate = $('#to').val();
                var updatedStartDate = startDate.split("/");
                updatedStartDate = updatedStartDate[1] + "/" + updatedStartDate[0] + "/" + updatedStartDate[2];
                var updatedEndDate = endDate.split("/");
                updatedEndDate = updatedEndDate[1] + "/" + updatedEndDate[0] + "/" + updatedEndDate[2];
                window.location.href = "@Url.Action("RangeFilter", "Holiday")" + "?start_date=" + updatedStartDate + "&end_date=" + updatedEndDate
            }
        }

        $("#add").click(function () {
            $(".datepicker").val("");
            $("#Description").val("");
            $("#Notify").val("");
            $("#myModalLabel").html('@Html.DisplayNameFor(model=>model.NewHolidayClosingDate)');
            $("#Mode").val("Add");
            $("#myModal").modal("show");
        });

        $(".edit").click(function () {
            var from = $(this).attr("data-date").split(" ");
            //var year = from[2].split(" ");
            //var formattedDate = from[0] + "-" + from[1] + "-" + year[0];
            //$("#datepicker").datepicker("update", formattedDate);
            $(".datepicker").datepicker("update", from[0]);
            $("#Description").val($(this).attr("data-description"));
            $("#Notify").val($(this).attr("data-notify"));
            $("#HolidayId").val($(this).attr("data-id"));
            $("#myModalLabel").html('@Model.HolidayData.modify_holiday_closing_data');
            $("#Mode").val("Edit");
            $("#myModal").modal("show");
        });

        $("#Notify").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
        //$("#Description").keyup(function () {

        //    var len = $("#Description").val().length;
        //    $("#numlimit").css("color", "green");
        //    $("#numlimit").text(len);
        //    if (len >= 250)
        //        {
        //        $("#numlimit").css("color", "red");
        //    }
        //});
        $("#holiday").click(function () {
            if ($(".datepicker").val().length > 0 && $("#Notify").val().length > 0 && $("#Description").val().length > 0) {
                $("#holiday").prop("disabled", true);
                if ($("#Mode").val() == "Add") {
                    $.ajax({
                        url: "@Url.Action("AddHoliday", "Holiday")",
                        data: "{'holidayDate':'" + $(".datepicker").val() + "','description':'" + $("#Description").val() + "','notify':'" + $("#Notify").val() + "'}",
                        contentType: 'application/json',
                        method: 'POST',
                        success: function (result) {
                            if (result == 1) {
                                $("#holiday").prop("disabled", false);
                                $("#myModal").modal("hide");
                                alert('@Html.DisplayNameFor(model=>model.NotificationAddedSuccessfully)');
                                location.reload();
                            } else {
                                $("#holiday").prop("disabled", false);
                                alert('@Html.DisplayNameFor(model=>model.SomethingWentWrong)');
                            }
                        },
                        error: function (e) {
                            $("#holiday").prop("disabled", false);
                            alert('@Html.DisplayNameFor(model=>model.SomethingWentWrong)');
                        }
                    });
                }
                else {
                    $.ajax({
                        url: "@Url.Action("EditHoliday", "Holiday")",
                        data: "{'id':'" + $("#HolidayId").val() + "','holidayDate':'" + $(".datepicker").val() + "','description':'" + $("#Description").val() + "','notify':'" + $("#Notify").val() + "'}",
                        contentType: 'application/json',
                        method: 'POST',
                        success: function (result) {
                            if (result == 1) {
                                $("#holiday").prop("disabled", false);
                                $("#myModal").modal("hide");
                                alert('@Html.DisplayNameFor(model=>model.NotificationUpdatedSuccessfully)');
                                location.reload();
                            }
                            else {
                                $("#holiday").prop("disabled", false);
                                alert('@Html.DisplayNameFor(model=>model.SomethingWentWrong)');
                            }
                        },
                        error: function (e) {
                            $("#holiday").prop("disabled", false);
                            alert('@Html.DisplayNameFor(model=>model.SomethingWentWrong)');
                        }
                    });
                }
            }
            else {
                alert('@Html.DisplayNameFor(model=>model.MakeSureYouHaveProvidedDataForAllFields)');
            }
        });

        $(".change-status").click(function () {
            $("#StatusHolidayId").val($(this).attr("data-id"));
            $("#Statusdd").val($(this).attr("data-status"));
            $("#StatusModal").modal("show");
        });

        $("#change-status").click(function () {
            $("#change-status").prop("disabled", true);
            $.ajax({
                url: "@Url.Action("ChangeHolidayStatus", "Holiday")" + "?id=" + $("#StatusHolidayId").val() + "&status=" + $("#Statusdd").val(),
                method: 'POST',
                contentType: 'application/json',
                success: function (result) {
                    if (result == 1) {
                        $("#change-status").prop("disabled", false);
                        alert('@Html.DisplayNameFor(model=>model.StatusUpdatedSuccessfully)');
                        $("#StatusModal").modal("hide");
                        location.reload();
                    }
                    else if (result == 2) {
                        $("#change-status").prop("disabled", false);
                        alert("User not authorized.");
                    }
                    else {
                        $("#change-status").prop("disabled", false);
                        alert('@Html.DisplayNameFor(model=>model.StatusUpdatedSuccessfully)');
                    }
                },
                error: function (e) {
                    $("#change-status").prop("disabled", false);
                    alert('@Html.DisplayNameFor(model=>model.StatusUpdatedSuccessfully)');
                }
            });
        });
    </script>
}
